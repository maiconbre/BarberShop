# ========================================
# CONFIGURAÇÕES PARA DEPLOY NO RENDER
# ========================================
# Este arquivo contém todas as variáveis de ambiente necessárias
# para configurar no dashboard do Render

# ========================================
# INSTRUÇÕES DE USO
# ========================================
# 1. Acesse o dashboard do seu projeto no Render
# 2. Vá para "Environment Variables" ou "Environment"
# 3. Adicione cada variável abaixo (uma por linha)
# 4. Substitua os valores de exemplo pelos valores reais
# 5. Faça um novo deploy

# ========================================
# VARIÁVEIS OBRIGATÓRIAS
# ========================================

# Ambiente de execução
NODE_ENV=production

# Configurações do servidor
PORT=8000
HOST=0.0.0.0

# URL do banco de dados PostgreSQL
# Substitua pelos dados do seu banco PostgreSQL no Render
DATABASE_URL=postgresql://username:password@hostname:port/database_name

# Chave secreta para JWT (OBRIGATÓRIA)
# Gere uma chave segura com: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=IR5k/n7fIDNUNfSF7t6KGc/pEBCXEClNxZD7nD4UEWUG8iIg4cYDUZaJ+vYS3vCq/pGukiG3cTsiXFyjHlT94Q==

# Tempo de expiração do JWT
JWT_EXPIRES_IN=1d

# Chave secreta para refresh token (OBRIGATÓRIA)
# Gere uma chave segura com: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
REFRESH_TOKEN_SECRET=your_super_secret_refresh_token_key_here_64_characters_minimum

# Tempo de expiração do refresh token
REFRESH_TOKEN_EXPIRES_IN=7d

# ========================================
# VARIÁVEIS OPCIONAIS
# ========================================

# Logs SQL (recomendado: false em produção)
ENABLE_SQL_LOGS=false

# URL do banco de teste (opcional)
TEST_DATABASE_URL=postgresql://username:password@hostname:port/test_database_name

# ========================================
# COMANDOS PARA GERAR CHAVES SEGURAS
# ========================================
# Execute estes comandos no seu terminal local:
#
# Para JWT_SECRET:
# node -e "console.log('JWT_SECRET=' + require('crypto').randomBytes(32).toString('hex'))"
#
# Para REFRESH_TOKEN_SECRET:
# node -e "console.log('REFRESH_TOKEN_SECRET=' + require('crypto').randomBytes(32).toString('hex'))"

# ========================================
# EXEMPLO DE CONFIGURAÇÃO NO RENDER
# ========================================
# No dashboard do Render, adicione estas variáveis:
#
# Key: NODE_ENV
# Value: production
#
# Key: JWT_SECRET
# Value: [sua_chave_gerada_aqui]
#
# Key: REFRESH_TOKEN_SECRET
# Value: [sua_chave_gerada_aqui]
#
# Key: DATABASE_URL
# Value: [url_do_seu_postgresql]
#
# Key: PORT
# Value: 8000
#
# Key: HOST
# Value: 0.0.0.0

# ========================================
# CHECKLIST DE DEPLOY
# ========================================
# □ PostgreSQL criado no Render
# □ DATABASE_URL configurada
# □ JWT_SECRET configurado (chave forte)
# □ REFRESH_TOKEN_SECRET configurado (chave forte)
# □ NODE_ENV=production
# □ PORT=8000
# □ HOST=0.0.0.0
# □ Deploy realizado
# □ Logs verificados (sem erros de variáveis)

# ========================================
# TROUBLESHOOTING
# ========================================
# Se ainda houver erro:
# 1. Verifique se todas as variáveis estão configuradas
# 2. Confirme que as chaves JWT têm pelo menos 32 caracteres
# 3. Verifique se a DATABASE_URL está correta
# 4. Consulte os logs do Render para erros específicos
# 5. Teste localmente com as mesmas variáveis